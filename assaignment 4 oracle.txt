JOINS:

Create table department(
deptno int primary key,
deptname varchar(30),
location varchar(30),
depthead varchar(30)
)
drop table employee
CREATE table Employee(

empId int primary key,
name varchar(30),
gender varchar(10),
designation varchar(30),
salary int,
deptno int,
CONSTRAINT fk_employeeDEPT FOREIGN KEY(deptno) REFERENCES department(deptno),
managerId int
)
select * from department
INSERT ALL
INTO department(deptno,deptname,location,depthead)
VALUES(1,'IT','london','Rick')
INTO department(deptno,deptname,location,depthead)
VALUES(2,'PAYROLL','Delhi','Sanjay')
INTO department(deptno,deptname,location,depthead)
VALUES(3,'HR','New York','Christie')
INTO department(deptno,deptname,location,depthead)
VALUES(4,'Other Department','Sydney','Cindrella')
SELECT* from dual;

select * from employee
INSERT INTO Employee VALUES(1, 'Tom','Male','IT Manager', 40000,1,NULL)
INSERT INTO Employee VALUES(2, 'Pam', 'Female', 'Software Enginner',30000, 1,1)
INSERT INTO Employee VALUES(3, 'John', 'Male', 'HR Manager',35000, 3,NULL)
INSERT INTO Employee VALUES(4, 'Sam', 'Male', 'Team Lead',45000, 1,1)
INSERT INTO Employee VALUES(5, 'Todd', 'Male','Coordinator', 28000, 3,3)
INSERT INTO Employee VALUES(6, 'Ben', 'Male', 'Account Manager',70000, 2,NULL)
INSERT INTO Employee VALUES(7, 'Sara', 'Female', 'Accountant',48000, 2,6)
INSERT INTO Employee VALUES(8, 'Ganga', 'Female', 'Quality Tester',55000, 1,1)
INSERT INTO Employee VALUES(9, 'James', 'Male',  NULL,65000,NULL,5)
INSERT INTO Employee VALUES(10, 'Russell', 'Male',  NULL,88000,NULL,5)
----------------------------------------------------------------------------------------------------------------
1. Report needed: Names of employees who are manager. Hint: The names of people who have their own employeeID as the managerID 
   You can set the status of your assignment here.

select * from employee
select distinct mgr.name as manager 
from employee emp
join employee mgr
on emp.managerid=mgr.empid

----------------------------------------------------------------------------------------------------------------------------------------
3. List the name of all employees along with their department name and Annual Income.
   For each row get the output in the form ‘Every Year Mark of Accounts department earns amount 450000’. This output has to come under a heading ‘Annual income Report’.
   You can set the status of your assignment here.
select * from employee
select * from department 
select empid,name, deptname,'every year mark off accounts department earns amount'||(salary*12) as anual_income_report  from employee
left join department
using (deptno)

---------------------------------------------------------------------------------------------------------------------------

5. Report needed: Names of departments and names of employees. Names of departments in ascending order. 
   Within the same department, employee name should be in the descending order
select deptname,name from department
left join employee
using(deptno)
order by deptname,name desc
-----------------------------------------------------------------------------------------------------------------------------
6. Find out employee name and departmentname of employees who either works in a Toy or Shoe department.
select * from employee
select * from department
select name,deptname
from employee
join department
using(deptno)
where deptname='toy' or deptname='shoe'
----------------------------------------------------------------------------------------------------------------------------------
7. Report needed: Name concatenated with department, separated by comma and space and name column Employee and department.
select deptname||', '||name as employee_and_department
from department
join employee
using (deptno)
-----------------------------------------------------------------------------------------------------------------------------
8. Write a query to display name, job, department number and department name for all employees who work in DALLAS.
update department set location='dellas' where deptno=1
select name,designation,deptno,deptname
from employee
inner join department
using(deptno)
where location='dellas'

------------------------------------------------------------------------------------------------------------------
9. List the names of all employees along with name of managers

select * from employee
delect * from department
select e.name as employee ,m.name as manager
from employee e
inner join employee m
on e.managerid=m.empid

select e.name as employee, m.name as manager -----------------------------------------other method
from((select empid,managerid,name from employee)e 
inner join (select empid,managerid,name from employee)m 
on m.empid = e.managerid )

----------------------------------------------------------------------------------------------------------------------------------
10. Display all employee name, manager number and manager name of all employees including King who have no manager.
select e.name as employee ,e.managerid as managerid ,m.name as manager
from employee e
left join employee m
on e.managerid=m.empid

-------------------------------------------------------------------------------------------------------------------------------------------------------
11. Display employee name, department number and all employees that work in same department as a given employee (‘Mathew’). Give each column an appropriate label.
select * from employee
select d.deptno,d.name
from employee d
left join employee e
on d.deptno=e.deptno
where e.name ='Tom'

---------------------------------------------------------------------------------------------------------------------------------------------------
12. Create a unique listing of all jobs that are in department 3. Include location of department 3 in the output.
select * from employee
select * from department
select designation,location
from employee
full join department
using (deptno)
where deptno=3
-----------------------------------------------------------------------------------------------------------------------------------------------------
13. Display the name of students and the course they are doing
create table student1(
name varchar(20),
batchid int,
courseid int
)
drop table student1
insert all
into student1(name,batchid,courseid)
values('rahla',1,2)
into student1(name,batchid,courseid)
values('sana',1,1)
into student1(name,batchid,courseid)
values('steena',2,3)
into student1(name,batchid,courseid)
values('sanju',2,3)
into student1(name,batchid,courseid)
values('rafi',3,2)
select * from dual
create table course1(
courseid int,
coursename varchar(20)
) 
insert all
into course1(courseid,coursename)
values(1,'b tech')
into course1(courseid,coursename)
values(2,'m tech')
into course1(courseid,coursename)
values(3,'mba')
select * from dual
create table batch1(
batchid int,
batchname varchar(20),
courseid int
)
insert all
into batch1(batchname,batchid,courseid)
values('2018-19',1,1)
into batch1(batchname,batchid,courseid)
values('2020-22',3,2)
into batch1(batchname,batchid,courseid)
values('2015-17',2,2)
select * from dual

select name,coursename
from student1
inner join course1
on student1.courseid=course1.courseid
-------------------------------------------------------------------------------------------------------------------------------------
14. Display the name of student and the batch name
select name, batchname
from student1
inner join batch1
using (batchid)

15. Display the name of student and the course name even if there is no student in the course.
insert all
into course1(courseid,coursename)
values(5,'b com')
into course1(courseid,coursename)
values(6,'m com')
select * from dual


select name, coursename
from student1
right outer join course1
using(courseid)

16. Display the name of the customer, the data of order and the items ordered by the customer
select * from customer1
select custname, date, orderdetails 
from customer C
INNER JOIN order O
ON C.orderNo = O.orderNo


SUB QUERY:


1.  find those employees who receive a higher salary than the employee with ID 163. Return first name, last name

select firstname,lastname from employee where salary >all(select salary from employee where employee_id=163)
---------------------------------------------------------------------------------------------------------------------------

2.  write a SQL query to find out which employees have the same designation as the employee whose ID is 169. Return first name, last name, 
    department ID and job ID

select firstname,lastname,deptid,jobid from employee where designation=(select designation from employee where employee_id=169)
--------------------------------------------------------------------------------------------------------------------------------------------

4.  write a SQL query to find those employees whose salary is in the range of 1000, and 3000 (Begin and end values have included.). Return all the fields.

select * from employee where salary between 10 and 20